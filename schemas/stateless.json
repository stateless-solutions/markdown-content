{
  "info": {
    "title": "Stateless Gateway",
    "version": "v0.0.1",
    "contact": {
      "name": "Stateless Solutions",
      "email": "hello@stateless.solutions"
    }
  },
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Index",
        "operationId": "Index",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/docs/contentData": {
      "get": {
        "summary": "GetContentData",
        "operationId": "DocsContentdataGetContentData",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentItem"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/docs/navItems": {
      "get": {
        "summary": "GetNavItems",
        "operationId": "DocsNavitemsGetNavItems",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NavItem"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/oauth2/{provider}/callback": {
      "get": {
        "tags": [
          "OAuth2 Access"
        ],
        "summary": "Callback",
        "operationId": "V1Oauth2ProviderCallbackCallback",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect Response",
            "headers": {
              "location": {
                "schema": {
                  "type": "string"
                },
                "name": "",
                "in": "header",
                "description": "target path for the redirect",
                "required": false,
                "deprecated": false,
                "allowEmptyValue": false,
                "allowReserved": false
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/oauth2/{provider}/login": {
      "get": {
        "tags": [
          "OAuth2 Access"
        ],
        "summary": "LoginViaProvider",
        "operationId": "V1Oauth2ProviderLoginLoginViaProvider",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/accounts/profile": {
      "get": {
        "tags": [
          "Accounts Endpoint"
        ],
        "summary": "Get current account",
        "operationId": "get_profile",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountProfileAccountResponseBody"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/api_keys": {
      "post": {
        "tags": [
          "API Keys Endpoint"
        ],
        "summary": "Create an API key for the current account",
        "description": "Create a new API key for the current account.\n\nArgs:\n    current_account (Account): The current user account.\n    api_key_service (APIKeyService): The API key service.\n    data (DTOData[APIKeyCreate]): The API key creation data.\n\nReturns:\n    APIKey: The created API key object.",
        "operationId": "create_api_key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyAPIKeyCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiKeyAPIKeyCreateReturnResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/api_keys/list": {
      "get": {
        "tags": [
          "API Keys Endpoint"
        ],
        "summary": "List API keys for the current account",
        "description": "List all API keys for the current account.\n\nArgs:\n    api_key_service (APIKeyService): The API key service.\n    current_account (Account): The current user account.\n    filters (list[FilterTypes], optional): List of filters to apply. Defaults to Dependency(skip_validation=True).\n\nReturns:\n    OffsetPagination[APIKey]: Paginated list of API key objects.",
        "operationId": "list_api_keys",
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Any UUID string"
                  },
                  "type": "array"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchField",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "Search should be case sensitive"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.api_keys.controllers.APIKeyController.list_api_keysAPIKeyResponseBody"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/api_keys/{api_key_id}": {
      "get": {
        "tags": [
          "API Keys Endpoint"
        ],
        "summary": "Get API key from the current account",
        "description": "Retrieve an API key by ID for the current account.\n\nArgs:\n    api_key_service (APIKeyService): The API key service.\n    current_account (Account): The current user account.\n    api_key_id (UUID4): The ID of the API key to retrieve.\n\nReturns:\n    APIKey: The API key object.\n\nRaises:\n    NotAuthorizedException: If the current account is not authorized to access this API key.",
        "operationId": "get_api_key",
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.api_keys.controllers.APIKeyController.get_api_keyAPIKeyResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/users/current": {
      "get": {
        "tags": [
          "User Accounts"
        ],
        "summary": "Get the current user based off of the session",
        "operationId": "get_current_user",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.get_current_userUserResponseBody"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/users/list": {
      "get": {
        "tags": [
          "User Accounts"
        ],
        "summary": "List all users",
        "description": "List all users.\n\nArgs:\n    users_service (UserService): The user service.\n    filters (list[FilterTypes]): List of filters to apply.\n\nReturns:\n    OffsetPagination[User]: Paginated list of user objects.",
        "operationId": "list_users",
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Any UUID string"
                  },
                  "type": "array"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchField",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "Search should be case sensitive"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.list_usersUserResponseBody"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/users/{user_id}": {
      "get": {
        "tags": [
          "User Accounts"
        ],
        "summary": "Get user",
        "description": "Retrieve a user by ID.\n\nArgs:\n    current_account (Account): The current user account.\n    users_service (UserService): The user service.\n    user_id (UUID4): The ID of the user to retrieve.\n\nReturns:\n    User: The user object.",
        "operationId": "get_user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.get_userUserResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/users": {
      "post": {
        "tags": [
          "User Accounts"
        ],
        "summary": "Create an user",
        "description": "Create a new user.\n\nArgs:\n    current_account (Account): The current user account.\n    users_service (UserService): The user service.\n    data (DTOData[UserCreate]): The user creation data.\n\nReturns:\n    User: The created user object.",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserUserCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.create_userUserResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/providers/{provider_id}": {
      "get": {
        "tags": [
          "Provider Accounts"
        ],
        "summary": "Get provider",
        "description": "Retrieve a provider by ID.\n\nArgs:\n    current_account (Account): The current user account.\n    providers_service (ProviderService): The provider service.\n    provider_id (UUID4): The ID of the provider to retrieve.\n\nReturns:\n    Provider: The provider object.",
        "operationId": "get_provider",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.get_providerProviderResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/providers": {
      "post": {
        "tags": [
          "Provider Accounts"
        ],
        "summary": "Create a provider",
        "description": "Create a new provider.\n\nArgs:\n    current_account (Account): The current user account.\n    providers_service (ProviderService): The provider service.\n    data (DTOData[ProviderCreate]): The provider creation data.\n\nReturns:\n    Provider: The created provider object.",
        "operationId": "create_provider",
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.create_providerProviderResponseBody"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/providers/list": {
      "get": {
        "tags": [
          "Provider Accounts"
        ],
        "summary": "List all providers",
        "description": "List all providers.\n\nArgs:\n    providers_service (ProviderService): The provider service.\n    filters (list[FilterTypes]): List of filters to apply.\n\nReturns:\n    OffsetPagination[Provider]: Paginated list of provider objects.",
        "operationId": "list_providers",
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Any UUID string"
                  },
                  "type": "array"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchField",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "Search should be case sensitive"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.list_providersProviderResponseBody"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/buckets/{bucket_id}": {
      "get": {
        "tags": [
          "Bucket Management"
        ],
        "summary": "Get bucket by ID",
        "description": "Retrieve a bucket by ID.\n\nArgs:\n    current_user (Account): The current user account.\n    bucket_id (UUID4): The ID of the bucket to retrieve.\n\nReturns:\n    Bucket: The bucket object.",
        "operationId": "get_bucket",
        "parameters": [
          {
            "name": "bucket_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody56cb1646a8c538d3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Bucket Management"
        ],
        "summary": "Delete bucket by ID",
        "description": "Delete a bucket by ID.\n\nArgs:\n    bucket_service (BucketService): The bucket service.\n    bucket_id (UUID4): The ID of the bucket to delete.",
        "operationId": "delete_bucket",
        "parameters": [
          {
            "name": "bucket_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Bucket Management"
        ],
        "summary": "UpdateBucket",
        "description": "Update a bucket",
        "operationId": "update_bucket",
        "parameters": [
          {
            "name": "bucket_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bucket ID",
              "description": "The bucket to update."
            },
            "description": "The bucket to update.",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBucketBucketUpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody2a9d54bec6a46ec7"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/buckets": {
      "post": {
        "tags": [
          "Bucket Management"
        ],
        "summary": "Create a bucket",
        "description": "Create a new bucket.\n\nArgs:\n    current_user (Account): The current user account.\n    bucket_service (BucketService): The bucket service.\n    data (DTOData[BucketCreate]): The bucket creation data.\n\nReturns:\n    Bucket: The created bucket object.",
        "operationId": "create_bucket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBucketBucketCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody4348dcbc25e4456f"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/buckets/list": {
      "get": {
        "tags": [
          "Bucket Management"
        ],
        "summary": "List all buckets",
        "description": "List all buckets.\n\nArgs:\n    current_user (Account): The current user account.\n    bucket_service (BucketService): The bucket service.\n    filters (list[FilterTypes]): List of filters to apply.\n\nReturns:\n    OffsetPagination[Bucket]: Paginated list of bucket objects.",
        "operationId": "list_buckets",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody9f58bb248a75d69c"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/offerings/list": {
      "get": {
        "tags": [
          "Offerings Endpoint"
        ],
        "summary": "List all offerings",
        "description": "List all offerings.",
        "operationId": "list_offerings",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody70c58bb537cf8511"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/offerings/{offering_id}": {
      "get": {
        "tags": [
          "Offerings Endpoint"
        ],
        "summary": "Get offering",
        "description": "Retrieve an offering by ID.\n\nArgs:\n    current_provider (Provider): The current provider.\n    offerings_service (OfferingService): The offering service.\n    offering_id (UUID4): The ID of the offering to retrieve.\n\nReturns:\n    Offering: The offering object.\n\nRaises:\n    NotAuthorizedException: If the current provider is not authorized to view this offering.",
        "operationId": "get_offering",
        "parameters": [
          {
            "name": "offering_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody78633983620be18b"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Offerings Endpoint"
        ],
        "summary": "Delete an offering",
        "description": "Delete an offering by ID.\n\nArgs:\n    current_provider (Provider): The current provider.\n    offerings_service (OfferingService): The offering service.\n    offering_id (UUID4): The ID of the offering to delete.\n\nRaises:\n    NotAuthorizedException: If the current provider is not authorized to delete this offering.",
        "operationId": "delete_offering",
        "parameters": [
          {
            "name": "offering_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/offerings": {
      "post": {
        "tags": [
          "Offerings Endpoint"
        ],
        "summary": "Create an offering",
        "description": "Create a new offering.\n\nArgs:\n    current_provider (Provider): The current provider.\n    offerings_service (OfferingService): The offering service.\n    data (DTOData[OfferingCreate]): The offering creation data.\n\nReturns:\n    Offering: The created offering object.",
        "operationId": "create_offering",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferingOfferingCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody284c0f3ae27d3cb6"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/chains/{chain_id}": {
      "get": {
        "tags": [
          "Chains Endpoint"
        ],
        "summary": "Get chain",
        "description": "Retrieve a chain by ID.\n\nArgs:\n    chains_service (ChainService): The chain service.\n    chain_id (int): The ID of the chain to retrieve.\n\nReturns:\n    Chain: The chain object.",
        "operationId": "get_chain",
        "parameters": [
          {
            "name": "chain_id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChainChainResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Chains Endpoint"
        ],
        "summary": "Update chain",
        "description": "Update an existing chain.\n\nArgs:\n    current_account (Account): The current user account.\n    chains_service (ChainService): The chain service.\n    chain_id (int): The ID of the chain to update.\n    data (DTOData[ChainUpdate]): The chain update data.\n\nReturns:\n    Chain: The updated chain object.",
        "operationId": "update_chain",
        "parameters": [
          {
            "name": "chain_id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChainChainUpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateChainChainResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Chains Endpoint"
        ],
        "summary": "Delete chain",
        "description": "Delete a chain by ID.\n\nArgs:\n    chains_service (ChainService): The chain service.\n    chain_id (int): The ID of the chain to delete.",
        "operationId": "delete_chain",
        "parameters": [
          {
            "name": "chain_id",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/chains": {
      "get": {
        "tags": [
          "Chains Endpoint"
        ],
        "summary": "List chains",
        "description": "List all chains.\n\nArgs:\n    chains_service (ChainService): The chain service.\n    filters (list[FilterTypes]): List of filters to apply.\n\nReturns:\n    OffsetPagination[Chain]: Paginated list of chain objects.",
        "operationId": "list_chains",
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Any UUID string"
                  },
                  "type": "array"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchField",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "Search should be case sensitive"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ListChainsChainResponseBody"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Chains Endpoint"
        ],
        "summary": "Create a chain",
        "description": "Create a new chain.\n\nArgs:\n    chains_service (ChainService): The chain service.\n    data (DTOData[ChainCreate]): The chain creation data.\n\nReturns:\n    Chain: The created chain object.",
        "operationId": "create_chain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChainChainCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChainChainResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/regions/{region_id}": {
      "get": {
        "tags": [
          "Regions Endpoint"
        ],
        "summary": "Get region",
        "description": "Retrieve a region by ID.\n\nArgs:\n    regions_service (RegionService): The region service.\n    region_id (UUID4): The ID of the region to retrieve.\n\nReturns:\n    Region: The region object.",
        "operationId": "get_region",
        "parameters": [
          {
            "name": "region_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionRegionResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Regions Endpoint"
        ],
        "summary": "Update region",
        "description": "Update an existing region.\n\nArgs:\n    regions_service (RegionService): The region service.\n    region_id (UUID4): The ID of the region to update.\n    data (DTOData[RegionUpdate]): The region update data.\n\nReturns:\n    Region: The updated region object.",
        "operationId": "update_region",
        "parameters": [
          {
            "name": "region_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRegionRegionUpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegionRegionResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Regions Endpoint"
        ],
        "summary": "Delete region",
        "description": "Delete a region by ID.\n\nArgs:\n    regions_service (RegionService): The region service.\n    region_id (UUID4): The ID of the region to delete.",
        "operationId": "delete_region",
        "parameters": [
          {
            "name": "region_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/regions": {
      "get": {
        "tags": [
          "Regions Endpoint"
        ],
        "summary": "List regions",
        "description": "List all regions.\n\nArgs:\n    regions_service (RegionService): The region service.\n    filters (list[FilterTypes]): List of filters to apply.\n\nReturns:\n    OffsetPagination[Region]: Paginated list of region objects.",
        "operationId": "list_regions",
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Any UUID string"
                  },
                  "type": "array"
                }
              ]
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchField",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "Search should be case sensitive"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ListRegionsRegionResponseBody"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Regions Endpoint"
        ],
        "summary": "Create a region",
        "description": "Create a new region.\n\nArgs:\n    regions_service (RegionService): The region service.\n    data (DTOData[RegionCreate]): The region creation data.\n\nReturns:\n    Region: The created region object.",
        "operationId": "create_region",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionRegionCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRegionRegionResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/entrypoints/list": {
      "get": {
        "tags": [
          "Entrypoints Endpoint"
        ],
        "summary": "List entrypoints",
        "description": "List entrypoints with optional filtering.\n\nArgs:\n    entrypoints_service (EntrypointService): The entrypoint service.\n    filters (list[FilterTypes]): Optional filters for listing entrypoints.\n\nReturns:\n    OffsetPagination[Entrypoint]: Paginated list of entrypoint objects.",
        "operationId": "list_entrypoints",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody7a982584d982524d"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/entrypoints/{entrypoint_id}": {
      "get": {
        "tags": [
          "Entrypoints Endpoint"
        ],
        "summary": "Get entrypoint",
        "description": "Get an entrypoint by ID.\n\nArgs:\n    entrypoints_service (EntrypointService): The entrypoint service.\n    entrypoint_id (UUID4): The ID of the entrypoint to retrieve.\n\nReturns:\n    Entrypoint: The entrypoint object.",
        "operationId": "get_entrypoint",
        "parameters": [
          {
            "name": "entrypoint_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody503c522a656f7312"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Entrypoints Endpoint"
        ],
        "summary": "Update entrypoint",
        "description": "Update an existing entrypoint.\n\nArgs:\n    current_provider (Provider): The current provider.\n    entrypoints_service (EntrypointService): The entrypoint service.\n    entrypoint_id (UUID4): The ID of the entrypoint to update.\n    data (DTOData[EntrypointUpdate]): The updated data for the entrypoint.\n\nReturns:\n    Entrypoint: The updated entrypoint object.\n\nRaises:\n    NotAuthorizedException: If the entrypoint does not belong to the provider.",
        "operationId": "update_entrypoint",
        "parameters": [
          {
            "name": "entrypoint_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Any UUID string"
            },
            "description": "Any UUID string",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEntrypointEntrypointUpdateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBodyd133dddbae9f4e6a"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/entrypoints": {
      "post": {
        "tags": [
          "Entrypoints Endpoint"
        ],
        "summary": "Create an entrypoint",
        "description": "Create a new entrypoint.\n\nArgs:\n    current_provider (Provider): The current provider.\n    entrypoints_service (EntrypointService): The entrypoint service.\n    data (DTOData[EntrypointCreate]): The data for creating the entrypoint.\n\nReturns:\n    Entrypoint: The created entrypoint object.\n\nRaises:\n    NotAuthorizedException: If the offering does not belong to the provider.",
        "operationId": "create_entrypoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntrypointEntrypointCreateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody9f7fca8c2233f007"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Health Check",
        "description": "Execute a health check against backend components.  Returns system information including database and cache status.",
        "operationId": "SystemHealth",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealth"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/eth/v1/{bucket_id}": {
      "post": {
        "tags": [
          "Ethereum Handler Endpoint"
        ],
        "summary": "Handle ethereum requests",
        "operationId": "handle_eth",
        "parameters": [
          {
            "name": "bucket_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bucket ID",
              "description": "The bucket that handles the request"
            },
            "description": "The bucket that handles the request",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "ContentItem": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the content page. Must match the end of the route from the navigation order structure."
          },
          "content": {
            "type": "string",
            "description": "The raw markdown content to be rendered in the docs"
          }
        },
        "type": "object",
        "required": [
          "content",
          "name"
        ],
        "title": "ContentItem"
      },
      "NavItem": {
        "properties": {
          "sortOrder": {
            "type": "integer",
            "description": "The sort order used to order the side navigation"
          },
          "route": {
            "type": "string",
            "description": "The route of the corresponding doc page. Should remain empty for headers"
          },
          "label": {
            "type": "string",
            "description": "The name to be displayed in the navigation side bar."
          }
        },
        "type": "object",
        "required": [
          "label",
          "route",
          "sortOrder"
        ],
        "title": "NavItem"
      },
      "AccountProfileAccount_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "AccountProfileAccount_0ResponseBody"
      },
      "AccountProfileAccountResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/AccountProfileAccount_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "api_keys",
          "name",
          "oauth_id"
        ],
        "title": "AccountProfileAccountResponseBody"
      },
      "CreateApiKeyAPIKeyCreateRequestBody": {
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "expires_at",
          "name",
          "prefix"
        ],
        "title": "CreateApiKeyAPIKeyCreateRequestBody"
      },
      "CreateApiKeyAPIKeyCreateReturnResponseBody": {
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "expires_at",
          "key",
          "name",
          "prefix"
        ],
        "title": "CreateApiKeyAPIKeyCreateReturnResponseBody"
      },
      "ListApiKeysAPIKeyResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "ListApiKeysAPIKeyResponseBody"
      },
      "gateway.domain.api_keys.controllers.APIKeyController.list_api_keysAPIKeyResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/ListApiKeysAPIKeyResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.api_keys.controllers.APIKeyController.list_api_keysAPIKeyResponseBody"
      },
      "GetApiKeyAPIKeyResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "GetApiKeyAPIKeyResponseBody"
      },
      "gateway.domain.api_keys.controllers.APIKeyController.get_api_keyAPIKeyResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/GetApiKeyAPIKeyResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.api_keys.controllers.APIKeyController.get_api_keyAPIKeyResponseBody"
      },
      "GetCurrentUserUserResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "GetCurrentUserUserResponseBody"
      },
      "GetCurrentUserUser_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "GetCurrentUserUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.get_current_userUser_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.users.controllers.UsersController.get_current_userUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.get_current_userUserResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/GetCurrentUserUserResponseBody"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/GetCurrentUserUser_0ResponseBody"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.get_current_userUser_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "buckets",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.users.controllers.UsersController.get_current_userUserResponseBody"
      },
      "ListUsersUserResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "ListUsersUserResponseBody"
      },
      "ListUsersUser_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "ListUsersUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.list_usersUser_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.users.controllers.UsersController.list_usersUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.list_usersUserResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/ListUsersUserResponseBody"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/ListUsersUser_0ResponseBody"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.list_usersUser_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "buckets",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.users.controllers.UsersController.list_usersUserResponseBody"
      },
      "GetUserUserResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "GetUserUserResponseBody"
      },
      "GetUserUser_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "GetUserUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.get_userUser_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.users.controllers.UsersController.get_userUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.get_userUserResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/GetUserUserResponseBody"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/GetUserUser_0ResponseBody"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.get_userUser_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "buckets",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.users.controllers.UsersController.get_userUserResponseBody"
      },
      "CreateUserUserCreateRequestBody": {
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid",
                "description": "Any UUID string"
              }
            ]
          }
        },
        "type": "object",
        "required": [],
        "title": "CreateUserUserCreateRequestBody"
      },
      "CreateUserUserResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "CreateUserUserResponseBody"
      },
      "CreateUserUser_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "CreateUserUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.create_userUser_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.users.controllers.UsersController.create_userUser_0ResponseBody"
      },
      "gateway.domain.users.controllers.UsersController.create_userUserResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/CreateUserUserResponseBody"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/CreateUserUser_0ResponseBody"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.users.controllers.UsersController.create_userUser_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "buckets",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.users.controllers.UsersController.create_userUserResponseBody"
      },
      "GetProviderProviderResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "GetProviderProviderResponseBody"
      },
      "GetProviderProvider_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "GetProviderProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.get_providerProvider_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.get_providerProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.get_providerProviderResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/GetProviderProviderResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/GetProviderProvider_0ResponseBody"
            },
            "type": "array"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.get_providerProvider_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "id",
          "name",
          "oauth_id",
          "offerings",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.get_providerProviderResponseBody"
      },
      "CreateProviderProviderResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "CreateProviderProviderResponseBody"
      },
      "CreateProviderProvider_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "CreateProviderProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.create_providerProvider_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.create_providerProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.create_providerProviderResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/CreateProviderProviderResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/CreateProviderProvider_0ResponseBody"
            },
            "type": "array"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.create_providerProvider_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "id",
          "name",
          "oauth_id",
          "offerings",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.create_providerProviderResponseBody"
      },
      "ListProvidersProviderResponseBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "name",
          "oauth_id"
        ],
        "title": "ListProvidersProviderResponseBody"
      },
      "ListProvidersProvider_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "ListProvidersProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.list_providersProvider_0ResponseBody": {
        "properties": {
          "account_id": {},
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "prefix"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.list_providersProvider_0ResponseBody"
      },
      "gateway.domain.providers.controllers.ProvidersController.list_providersProviderResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "$ref": "#/components/schemas/ListProvidersProviderResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/ListProvidersProvider_0ResponseBody"
            },
            "type": "array"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.providers.controllers.ProvidersController.list_providersProvider_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account",
          "account_type",
          "api_keys",
          "id",
          "name",
          "oauth_id",
          "offerings",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.providers.controllers.ProvidersController.list_providersProviderResponseBody"
      },
      "GetBucketBucketResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "GetBucketBucketResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody"
      },
      "GetBucketBucket_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "GetBucketBucket_0ResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody56cb1646a8c538d3": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "chain": {
            "$ref": "#/components/schemas/GetBucketBucketResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/GetBucketBucket_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain",
          "chain_id",
          "name",
          "offerings",
          "user",
          "user_id"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.get_bucketBucketResponseBody56cb1646a8c538d3"
      },
      "UpdateBucketBucketUpdateRequestBody": {
        "properties": {
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "offerings": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          }
        },
        "type": "object",
        "required": [],
        "title": "UpdateBucketBucketUpdateRequestBody"
      },
      "UpdateBucketBucketResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "UpdateBucketBucketResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody"
      },
      "UpdateBucketBucket_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "UpdateBucketBucket_0ResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody2a9d54bec6a46ec7": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "chain": {
            "$ref": "#/components/schemas/UpdateBucketBucketResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/UpdateBucketBucket_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain",
          "chain_id",
          "name",
          "offerings",
          "user",
          "user_id"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.update_bucketBucketResponseBody2a9d54bec6a46ec7"
      },
      "CreateBucketBucketCreateRequestBody": {
        "properties": {
          "name": {
            "type": "string"
          },
          "chain_id": {
            "type": "integer"
          },
          "offerings": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "CreateBucketBucketCreateRequestBody"
      },
      "CreateBucketBucketResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "CreateBucketBucketResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody"
      },
      "CreateBucketBucket_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "CreateBucketBucket_0ResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody4348dcbc25e4456f": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "chain": {
            "$ref": "#/components/schemas/CreateBucketBucketResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/CreateBucketBucket_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain",
          "chain_id",
          "name",
          "offerings",
          "user",
          "user_id"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.create_bucketBucketResponseBody4348dcbc25e4456f"
      },
      "ListBucketsBucketResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "ListBucketsBucketResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody": {
        "properties": {
          "u_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "u_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "u_created_at",
          "u_updated_at"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody"
      },
      "ListBucketsBucket_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "ListBucketsBucket_0ResponseBody"
      },
      "gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody9f58bb248a75d69c": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "chain": {
            "$ref": "#/components/schemas/ListBucketsBucketResponseBody"
          },
          "user": {
            "$ref": "#/components/schemas/gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody"
          },
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/ListBucketsBucket_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain",
          "chain_id",
          "name",
          "offerings",
          "user",
          "user_id"
        ],
        "title": "gateway.domain.buckets.controllers.BucketController.list_bucketsBucketResponseBody9f58bb248a75d69c"
      },
      "ListOfferingsOfferingResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "ListOfferingsOfferingResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody"
      },
      "ListOfferingsOffering_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering_id",
          "region_id",
          "url"
        ],
        "title": "ListOfferingsOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.list_offeringsOffering_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.list_offeringsOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody70c58bb537cf8511": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "chain": {
            "$ref": "#/components/schemas/ListOfferingsOfferingResponseBody"
          },
          "provider": {
            "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody"
          },
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/ListOfferingsOffering_0ResponseBody"
            },
            "type": "array"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.list_offeringsOffering_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "buckets",
          "chain",
          "chain_id",
          "entrypoints",
          "provider",
          "provider_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.list_offeringsOfferingResponseBody70c58bb537cf8511"
      },
      "GetOfferingOfferingResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "GetOfferingOfferingResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody"
      },
      "GetOfferingOffering_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering_id",
          "region_id",
          "url"
        ],
        "title": "GetOfferingOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.get_offeringOffering_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.get_offeringOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody78633983620be18b": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "chain": {
            "$ref": "#/components/schemas/GetOfferingOfferingResponseBody"
          },
          "provider": {
            "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody"
          },
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/GetOfferingOffering_0ResponseBody"
            },
            "type": "array"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.get_offeringOffering_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "buckets",
          "chain",
          "chain_id",
          "entrypoints",
          "provider",
          "provider_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.get_offeringOfferingResponseBody78633983620be18b"
      },
      "CreateOfferingOfferingCreateRequestBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "entrypoints": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "entrypoints",
          "provider_id"
        ],
        "title": "CreateOfferingOfferingCreateRequestBody"
      },
      "CreateOfferingOfferingResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "CreateOfferingOfferingResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody": {
        "properties": {
          "p_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "p_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "payment_address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "oauth_id": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "account_type",
          "id",
          "name",
          "oauth_id",
          "p_created_at",
          "p_updated_at",
          "payment_address"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody"
      },
      "CreateOfferingOffering_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering_id",
          "region_id",
          "url"
        ],
        "title": "CreateOfferingOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.create_offeringOffering_0ResponseBody": {
        "properties": {
          "user_id": {},
          "chain_id": {
            "type": "integer"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name",
          "user_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.create_offeringOffering_0ResponseBody"
      },
      "gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody284c0f3ae27d3cb6": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "chain": {
            "$ref": "#/components/schemas/CreateOfferingOfferingResponseBody"
          },
          "provider": {
            "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody"
          },
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/CreateOfferingOffering_0ResponseBody"
            },
            "type": "array"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/gateway.domain.offerings.controllers.OfferingController.create_offeringOffering_0ResponseBody"
            },
            "type": "array"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "buckets",
          "chain",
          "chain_id",
          "entrypoints",
          "provider",
          "provider_id"
        ],
        "title": "gateway.domain.offerings.controllers.OfferingController.create_offeringOfferingResponseBody284c0f3ae27d3cb6"
      },
      "GetChainChain_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "GetChainChain_0ResponseBody"
      },
      "GetChainChainResponseBody": {
        "properties": {
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/GetChainChain_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "offerings"
        ],
        "title": "GetChainChainResponseBody"
      },
      "UpdateChainChainUpdateRequestBody": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [],
        "title": "UpdateChainChainUpdateRequestBody"
      },
      "UpdateChainChain_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "UpdateChainChain_0ResponseBody"
      },
      "UpdateChainChainResponseBody": {
        "properties": {
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/UpdateChainChain_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "offerings"
        ],
        "title": "UpdateChainChainResponseBody"
      },
      "CreateChainChainCreateRequestBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "name"
        ],
        "title": "CreateChainChainCreateRequestBody"
      },
      "CreateChainChain_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "CreateChainChain_0ResponseBody"
      },
      "CreateChainChainResponseBody": {
        "properties": {
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/CreateChainChain_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "offerings"
        ],
        "title": "CreateChainChainResponseBody"
      },
      "ListChainsChain_0ResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "ListChainsChain_0ResponseBody"
      },
      "ListChainsChainResponseBody": {
        "properties": {
          "offerings": {
            "items": {
              "$ref": "#/components/schemas/ListChainsChain_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "offerings"
        ],
        "title": "ListChainsChainResponseBody"
      },
      "GetRegionEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "GetRegionEntrypointResponseBody"
      },
      "gateway.domain.regions.controllers.RegionController.get_regionEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.regions.controllers.RegionController.get_regionEntrypointResponseBody"
      },
      "GetRegionRegion_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "offering": {
            "$ref": "#/components/schemas/GetRegionEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.regions.controllers.RegionController.get_regionEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "offering_id",
          "region",
          "region_id",
          "url"
        ],
        "title": "GetRegionRegion_0ResponseBody"
      },
      "GetRegionRegionResponseBody": {
        "properties": {
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/GetRegionRegion_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "entrypoints",
          "name"
        ],
        "title": "GetRegionRegionResponseBody"
      },
      "UpdateRegionRegionUpdateRequestBody": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [],
        "title": "UpdateRegionRegionUpdateRequestBody"
      },
      "UpdateRegionEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "UpdateRegionEntrypointResponseBody"
      },
      "gateway.domain.regions.controllers.RegionController.update_regionEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.regions.controllers.RegionController.update_regionEntrypointResponseBody"
      },
      "UpdateRegionRegion_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "offering": {
            "$ref": "#/components/schemas/UpdateRegionEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.regions.controllers.RegionController.update_regionEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "offering_id",
          "region",
          "region_id",
          "url"
        ],
        "title": "UpdateRegionRegion_0ResponseBody"
      },
      "UpdateRegionRegionResponseBody": {
        "properties": {
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/UpdateRegionRegion_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "entrypoints",
          "name"
        ],
        "title": "UpdateRegionRegionResponseBody"
      },
      "ListRegionsEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "ListRegionsEntrypointResponseBody"
      },
      "gateway.domain.regions.controllers.RegionController.list_regionsEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.regions.controllers.RegionController.list_regionsEntrypointResponseBody"
      },
      "ListRegionsRegion_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "offering": {
            "$ref": "#/components/schemas/ListRegionsEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.regions.controllers.RegionController.list_regionsEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "offering_id",
          "region",
          "region_id",
          "url"
        ],
        "title": "ListRegionsRegion_0ResponseBody"
      },
      "ListRegionsRegionResponseBody": {
        "properties": {
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/ListRegionsRegion_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "entrypoints",
          "name"
        ],
        "title": "ListRegionsRegionResponseBody"
      },
      "CreateRegionRegionCreateRequestBody": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateRegionRegionCreateRequestBody"
      },
      "CreateRegionEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "CreateRegionEntrypointResponseBody"
      },
      "gateway.domain.regions.controllers.RegionController.create_regionEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.regions.controllers.RegionController.create_regionEntrypointResponseBody"
      },
      "CreateRegionRegion_0ResponseBody": {
        "properties": {
          "offering_id": {},
          "region_id": {},
          "offering": {
            "$ref": "#/components/schemas/CreateRegionEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.regions.controllers.RegionController.create_regionEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "offering_id",
          "region",
          "region_id",
          "url"
        ],
        "title": "CreateRegionRegion_0ResponseBody"
      },
      "CreateRegionRegionResponseBody": {
        "properties": {
          "entrypoints": {
            "items": {
              "$ref": "#/components/schemas/CreateRegionRegion_0ResponseBody"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "entrypoints",
          "name"
        ],
        "title": "CreateRegionRegionResponseBody"
      },
      "ListEntrypointsEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "ListEntrypointsEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody7a982584d982524d": {
        "properties": {
          "offering": {
            "$ref": "#/components/schemas/ListEntrypointsEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "region",
          "url"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.list_entrypointsEntrypointResponseBody7a982584d982524d"
      },
      "UpdateEntrypointEntrypointUpdateRequestBody": {
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [],
        "title": "UpdateEntrypointEntrypointUpdateRequestBody"
      },
      "UpdateEntrypointEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "UpdateEntrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBodyd133dddbae9f4e6a": {
        "properties": {
          "offering": {
            "$ref": "#/components/schemas/UpdateEntrypointEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "region",
          "url"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.update_entrypointEntrypointResponseBodyd133dddbae9f4e6a"
      },
      "GetEntrypointEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "GetEntrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody503c522a656f7312": {
        "properties": {
          "offering": {
            "$ref": "#/components/schemas/GetEntrypointEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "region",
          "url"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.get_entrypointEntrypointResponseBody503c522a656f7312"
      },
      "CreateEntrypointEntrypointCreateRequestBody": {
        "properties": {
          "url": {
            "type": "string"
          },
          "offering_id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "region_id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          }
        },
        "type": "object",
        "required": [
          "offering_id",
          "region_id",
          "url"
        ],
        "title": "CreateEntrypointEntrypointCreateRequestBody"
      },
      "CreateEntrypointEntrypointResponseBody": {
        "properties": {
          "chain_id": {
            "type": "integer"
          },
          "provider_id": {},
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "required": [
          "chain_id",
          "provider_id"
        ],
        "title": "CreateEntrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Any UUID string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody"
      },
      "gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody9f7fca8c2233f007": {
        "properties": {
          "offering": {
            "$ref": "#/components/schemas/CreateEntrypointEntrypointResponseBody"
          },
          "region": {
            "$ref": "#/components/schemas/gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody"
          },
          "id": {},
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offering",
          "region",
          "url"
        ],
        "title": "gateway.domain.entrypoints.controllers.EntrypointController.create_entrypointEntrypointResponseBody9f7fca8c2233f007"
      },
      "SystemHealth": {
        "properties": {
          "database_status": {
            "type": "string",
            "enum": [
              "online",
              "offline"
            ]
          },
          "cache_status": {
            "type": "string",
            "enum": [
              "online",
              "offline"
            ]
          },
          "worker_status": {
            "type": "string",
            "enum": [
              "online",
              "offline"
            ]
          },
          "app": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "cache_status",
          "database_status",
          "worker_status"
        ],
        "title": "SystemHealth"
      }
    }
  }
}