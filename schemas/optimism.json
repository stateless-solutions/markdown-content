{
  "openapi": "3.1.0",
  "info": {
    "title": "Ethereum JSON-RPC Specification",
    "description": "A specification of the standard interface for Ethereum clients.",
    "license": {
      "name": "CC0-1.0",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
    },
    "version": "0.0.0"
  },
  "components": {},
  "tags": [
    {
      "name": "eth"
    },
    {
      "name": "net"
    },
    {
      "name": "web3"
    },
    {
      "name": "shh"
    },
    {
      "name": "db"
    }
  ],
  "paths": {
    "/eth_getBlockByHash": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getBlockByHash",
        "description": "Returns information about a block by hash.",
        "operationId": "eth_getBlockByHash",
        "responses": {
          "200": {
            "description": "Block information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getBlockByHashResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Block object",
                      "type": "object",
                      "required": [
                        "parentHash",
                        "sha3Uncles",
                        "miner",
                        "stateRoot",
                        "transactionsRoot",
                        "receiptsRoot",
                        "logsBloom",
                        "number",
                        "gasLimit",
                        "gasUsed",
                        "timestamp",
                        "extraData",
                        "mixHash",
                        "nonce",
                        "size",
                        "transactions",
                        "uncles"
                      ],
                      "properties": {
                        "parentHash": {
                          "title": "Parent block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "sha3Uncles": {
                          "title": "Ommers hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "miner": {
                          "title": "Coinbase",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "stateRoot": {
                          "title": "State root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionsRoot": {
                          "title": "Transactions root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "receiptsRoot": {
                          "title": "Receipts root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "logsBloom": {
                          "title": "Bloom filter",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{512}$"
                        },
                        "difficulty": {
                          "title": "Difficulty",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "number": {
                          "title": "Number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "gasLimit": {
                          "title": "Gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "gasUsed": {
                          "title": "Gas used",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "timestamp": {
                          "title": "Timestamp",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "extraData": {
                          "title": "Extra data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "mixHash": {
                          "title": "Mix hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "nonce": {
                          "title": "Nonce",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{16}$"
                        },
                        "totalDifficulty": {
                          "title": "Total difficult",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "baseFeePerGas": {
                          "title": "Base fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "size": {
                          "title": "Block size",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "transactions": {
                          "anyOf": [
                            {
                              "title": "Transaction hashes",
                              "type": "array",
                              "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            },
                            {
                              "title": "Full transactions",
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "title": "Signed 1559 Transaction",
                                    "type": "object",
                                    "required": [
                                      "accessList",
                                      "chainId",
                                      "gas",
                                      "input",
                                      "maxFeePerGas",
                                      "maxPriorityFeePerGas",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "value",
                                      "yParity"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "maxPriorityFeePerGas": {
                                        "title": "max priority fee per gas",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                                      },
                                      "maxFeePerGas": {
                                        "title": "max fee per gas",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                                      },
                                      "accessList": {
                                        "title": "accessList",
                                        "type": "array",
                                        "description": "EIP-2930 access list",
                                        "items": {
                                          "title": "Access list entry",
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "title": "hex encoded address",
                                              "type": "string",
                                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                            },
                                            "storageKeys": {
                                              "type": "array",
                                              "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "yParity": {
                                        "title": "yParity",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Signed 2930 Transaction",
                                    "type": "object",
                                    "required": [
                                      "accessList",
                                      "chainId",
                                      "gas",
                                      "gasPrice",
                                      "input",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "value",
                                      "yParity"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "gasPrice": {
                                        "title": "gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The gas price willing to be paid by the sender in wei"
                                      },
                                      "accessList": {
                                        "title": "accessList",
                                        "type": "array",
                                        "description": "EIP-2930 access list",
                                        "items": {
                                          "title": "Access list entry",
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "title": "hex encoded address",
                                              "type": "string",
                                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                            },
                                            "storageKeys": {
                                              "type": "array",
                                              "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "yParity": {
                                        "title": "yParity",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Signed Legacy Transaction",
                                    "type": "object",
                                    "required": [
                                      "gas",
                                      "gasPrice",
                                      "input",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "v",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "gasPrice": {
                                        "title": "gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The gas price willing to be paid by the sender in wei"
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "v": {
                                        "title": "v",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "uncles": {
                          "title": "Uncles",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getBlockByHashRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getBlockByHash"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "Hydrated transactions",
                        "type": "boolean"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getBlockByHash",
                "params": [
                  "0xeb2307983a9c36625d1eb708ee7872918e0d51efb570995e654e181c56f76c13",
                  false
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getBlockByNumber": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getBlockByNumber",
        "description": "Returns information about a block by number.",
        "operationId": "eth_getBlockByNumber",
        "responses": {
          "200": {
            "description": "Block information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getBlockByNumberResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Block object",
                      "type": "object",
                      "required": [
                        "parentHash",
                        "sha3Uncles",
                        "miner",
                        "stateRoot",
                        "transactionsRoot",
                        "receiptsRoot",
                        "logsBloom",
                        "number",
                        "gasLimit",
                        "gasUsed",
                        "timestamp",
                        "extraData",
                        "mixHash",
                        "nonce",
                        "size",
                        "transactions",
                        "uncles"
                      ],
                      "properties": {
                        "parentHash": {
                          "title": "Parent block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "sha3Uncles": {
                          "title": "Ommers hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "miner": {
                          "title": "Coinbase",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "stateRoot": {
                          "title": "State root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionsRoot": {
                          "title": "Transactions root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "receiptsRoot": {
                          "title": "Receipts root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "logsBloom": {
                          "title": "Bloom filter",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{512}$"
                        },
                        "difficulty": {
                          "title": "Difficulty",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "number": {
                          "title": "Number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "gasLimit": {
                          "title": "Gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "gasUsed": {
                          "title": "Gas used",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "timestamp": {
                          "title": "Timestamp",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "extraData": {
                          "title": "Extra data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "mixHash": {
                          "title": "Mix hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "nonce": {
                          "title": "Nonce",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{16}$"
                        },
                        "totalDifficulty": {
                          "title": "Total difficult",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "baseFeePerGas": {
                          "title": "Base fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "size": {
                          "title": "Block size",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "transactions": {
                          "anyOf": [
                            {
                              "title": "Transaction hashes",
                              "type": "array",
                              "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            },
                            {
                              "title": "Full transactions",
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "title": "Signed 1559 Transaction",
                                    "type": "object",
                                    "required": [
                                      "accessList",
                                      "chainId",
                                      "gas",
                                      "input",
                                      "maxFeePerGas",
                                      "maxPriorityFeePerGas",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "value",
                                      "yParity"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "maxPriorityFeePerGas": {
                                        "title": "max priority fee per gas",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                                      },
                                      "maxFeePerGas": {
                                        "title": "max fee per gas",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                                      },
                                      "accessList": {
                                        "title": "accessList",
                                        "type": "array",
                                        "description": "EIP-2930 access list",
                                        "items": {
                                          "title": "Access list entry",
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "title": "hex encoded address",
                                              "type": "string",
                                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                            },
                                            "storageKeys": {
                                              "type": "array",
                                              "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "yParity": {
                                        "title": "yParity",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Signed 2930 Transaction",
                                    "type": "object",
                                    "required": [
                                      "accessList",
                                      "chainId",
                                      "gas",
                                      "gasPrice",
                                      "input",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "value",
                                      "yParity"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "gasPrice": {
                                        "title": "gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The gas price willing to be paid by the sender in wei"
                                      },
                                      "accessList": {
                                        "title": "accessList",
                                        "type": "array",
                                        "description": "EIP-2930 access list",
                                        "items": {
                                          "title": "Access list entry",
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "title": "hex encoded address",
                                              "type": "string",
                                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                            },
                                            "storageKeys": {
                                              "type": "array",
                                              "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "yParity": {
                                        "title": "yParity",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Signed Legacy Transaction",
                                    "type": "object",
                                    "required": [
                                      "gas",
                                      "gasPrice",
                                      "input",
                                      "nonce",
                                      "r",
                                      "s",
                                      "type",
                                      "v",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                      },
                                      "nonce": {
                                        "title": "nonce",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "to": {
                                        "title": "to address",
                                        "type": "string",
                                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                      },
                                      "gas": {
                                        "title": "gas limit",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "input": {
                                        "title": "input data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                      },
                                      "gasPrice": {
                                        "title": "gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The gas price willing to be paid by the sender in wei"
                                      },
                                      "chainId": {
                                        "title": "chainId",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Chain ID that this transaction is valid on."
                                      },
                                      "v": {
                                        "title": "v",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "r": {
                                        "title": "r",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      },
                                      "s": {
                                        "title": "s",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "uncles": {
                          "title": "Uncles",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getBlockByNumberRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getBlockByNumber"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      },
                      {
                        "title": "Hydrated transactions",
                        "type": "boolean"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getBlockByNumber",
                "params": [
                  "latest",
                  false
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getBlockTransactionCountByHash": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getBlockTransactionCountByHash",
        "description": "Returns the number of transactions in a block from a block matching the given block hash.",
        "operationId": "eth_getBlockTransactionCountByHash",
        "responses": {
          "200": {
            "description": "Transaction count",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getBlockTransactionCountByHashResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getBlockTransactionCountByHashRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getBlockTransactionCountByHash"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getBlockTransactionCountByHash",
                "params": [
                  "0xeb2307983a9c36625d1eb708ee7872918e0d51efb570995e654e181c56f76c13"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getBlockTransactionCountByNumber": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getBlockTransactionCountByNumber",
        "description": "Returns the number of transactions in a block matching the given block number.",
        "operationId": "eth_getBlockTransactionCountByNumber",
        "responses": {
          "200": {
            "description": "Transaction count",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getBlockTransactionCountByNumberResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getBlockTransactionCountByNumberRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getBlockTransactionCountByNumber"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getBlockTransactionCountByNumber",
                "params": [
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getUncleCountByBlockHash": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getUncleCountByBlockHash",
        "description": "Returns the number of uncles in a block from a block matching the given block hash.",
        "operationId": "eth_getUncleCountByBlockHash",
        "responses": {
          "200": {
            "description": "Uncle count",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getUncleCountByBlockHashResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getUncleCountByBlockHashRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getUncleCountByBlockHash"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getUncleCountByBlockHash",
                "params": [
                  "0xeb2307983a9c36625d1eb708ee7872918e0d51efb570995e654e181c56f76c13"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getUncleCountByBlockNumber": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getUncleCountByBlockNumber",
        "description": "Returns the number of transactions in a block matching the given block number.",
        "operationId": "eth_getUncleCountByBlockNumber",
        "responses": {
          "200": {
            "description": "Uncle count",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getUncleCountByBlockNumberResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getUncleCountByBlockNumberRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getUncleCountByBlockNumber"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getUncleCountByBlockNumber",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_chainId": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_chainId",
        "description": "Returns the chain ID of the current network.",
        "operationId": "eth_chainId",
        "responses": {
          "200": {
            "description": "Chain ID",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_chainIdResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_chainIdRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_chainId"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_chainId",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_syncing": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_syncing",
        "description": "Returns an object with data about the sync status or false.",
        "operationId": "eth_syncing",
        "responses": {
          "200": {
            "description": "Syncing status",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_syncingResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Syncing status",
                      "oneOf": [
                        {
                          "title": "Syncing progress",
                          "type": "object",
                          "properties": {
                            "startingBlock": {
                              "title": "Starting block",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "currentBlock": {
                              "title": "Current block",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "highestBlock": {
                              "title": "Highest block",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Not syncing",
                          "description": "Should always return false if not syncing.",
                          "type": "boolean"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_syncingRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_syncing"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_syncing",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_coinbase": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_coinbase",
        "description": "Returns the client coinbase address.",
        "operationId": "eth_coinbase",
        "responses": {
          "200": {
            "description": "Coinbase address",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_coinbaseResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded address",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_coinbaseRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_coinbase"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_coinbase",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_accounts": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_accounts",
        "description": "Returns a list of addresses owned by client.",
        "operationId": "eth_accounts",
        "responses": {
          "200": {
            "description": "Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_accountsResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Accounts",
                      "type": "array",
                      "items": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_accountsRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_accounts"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_accounts",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_blockNumber": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_blockNumber",
        "description": "Returns the number of most recent block.",
        "operationId": "eth_blockNumber",
        "responses": {
          "200": {
            "description": "Block number",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_blockNumberResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_blockNumberRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_blockNumber"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_blockNumber",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_call": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_call",
        "description": "Executes a new message call immediately without creating a transaction on the block chain.",
        "operationId": "eth_call",
        "responses": {
          "200": {
            "description": "Return data",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_callResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_callRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_call"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "type": "object",
                        "title": "Transaction",
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          }
                        }
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_call",
                "params": [
                  {
                    "to": "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                    "data": "TODO"
                  },
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_estimateGas": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_estimateGas",
        "description": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
        "operationId": "eth_estimateGas",
        "responses": {
          "200": {
            "description": "Gas used",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_estimateGasResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_estimateGasRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_estimateGas"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "type": "object",
                        "title": "Transaction",
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          }
                        }
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_estimateGas",
                "params": [
                  {
                    "to": "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                    "from": "0x683a42e5b414ae5cf79ece7e369ca5937fdcdc11"
                  },
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_createAccessList": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_createAccessList",
        "description": "Generates an access list for a transaction.",
        "operationId": "eth_createAccessList",
        "responses": {
          "200": {
            "description": "Gas used",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_createAccessListResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Access list result",
                      "type": "object",
                      "properties": {
                        "accessList": {
                          "title": "accessList",
                          "type": "array",
                          "items": {
                            "title": "Access list entry",
                            "type": "object",
                            "properties": {
                              "address": {
                                "title": "hex encoded address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "storageKeys": {
                                "type": "array",
                                "items": {
                                  "title": "32 byte hex value",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "error": {
                          "title": "error",
                          "type": "string"
                        },
                        "gasUsed": {
                          "title": "Gas used",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_createAccessListRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_createAccessList"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "type": "object",
                        "title": "Transaction",
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          }
                        }
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_createAccessList",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_gasPrice": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_gasPrice",
        "description": "Returns the current price per gas in wei.",
        "operationId": "eth_gasPrice",
        "responses": {
          "200": {
            "description": "Gas price",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_gasPriceResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Gas price",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_gasPriceRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_gasPrice"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_gasPrice",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_maxPriorityFeePerGas": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_maxPriorityFeePerGas",
        "description": "Returns the current maxPriorityFeePerGas per gas in wei.",
        "operationId": "eth_maxPriorityFeePerGas",
        "responses": {
          "200": {
            "description": "Max priority fee per gas",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_maxPriorityFeePerGasResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Max priority fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_maxPriorityFeePerGasRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_maxPriorityFeePerGas"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_maxPriorityFeePerGas",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_feeHistory": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_feeHistory",
        "description": "Transaction fee history\nReturns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",
        "operationId": "eth_feeHistory",
        "responses": {
          "200": {
            "description": "feeHistoryResult",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_feeHistoryResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "feeHistoryResults",
                      "description": "Fee history results.",
                      "type": "object",
                      "required": [
                        "oldestBlock",
                        "baseFeePerGas",
                        "gasUsedRatio"
                      ],
                      "properties": {
                        "oldestBlock": {
                          "title": "oldestBlock",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Lowest number block of returned range."
                        },
                        "baseFeePerGas": {
                          "title": "baseFeePerGasArray",
                          "description": "An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",
                          "type": "array",
                          "items": {
                            "title": "hex encoded unsigned integer",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        },
                        "reward": {
                          "title": "rewardArray",
                          "description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.",
                          "type": "array",
                          "items": {
                            "title": "rewardPercentile",
                            "description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",
                            "type": "array",
                            "items": {
                              "title": "rewardPercentile",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_feeHistoryRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_feeHistory"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "blockCount",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      {
                        "title": "newestBlock",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      },
                      {
                        "title": "rewardPercentiles",
                        "type": "array",
                        "items": {
                          "title": "rewardPercentile",
                          "description": "Floating point value between 0 and 100.",
                          "type": "number"
                        }
                      }
                    ],
                    "minItems": 3,
                    "maxItems": 3
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_feeHistory",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_newFilter": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_newFilter",
        "description": "Creates a filter object, based on filter options, to notify when the state changes (logs).",
        "operationId": "eth_newFilter",
        "responses": {
          "200": {
            "description": "Filter Identifier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_newFilterResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_newFilterRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_newFilter"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Filter",
                        "type": "object",
                        "properties": {
                          "fromBlock": {
                            "title": "from block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "toBlock": {
                            "title": "to block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "address": {
                            "title": "Address(es)",
                            "oneOf": [
                              {
                                "title": "Address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              {
                                "title": "Addresses",
                                "type": "array",
                                "items": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                }
                              }
                            ]
                          },
                          "topics": {
                            "title": "Topics",
                            "type": "array",
                            "items": {
                              "title": "Filter Topic List Entry",
                              "oneOf": [
                                {
                                  "title": "Any Topic Match",
                                  "type": "null"
                                },
                                {
                                  "title": "Single Topic Match",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                },
                                {
                                  "title": "Multiple Topic Match",
                                  "type": "array",
                                  "items": {
                                    "title": "32 hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_newFilter",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_newBlockFilter": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_newBlockFilter",
        "description": "Creates a filter in the node, to notify when a new block arrives.",
        "operationId": "eth_newBlockFilter",
        "responses": {
          "200": {
            "description": "Filter Identifier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_newBlockFilterResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_newBlockFilterRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_newBlockFilter"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_newBlockFilter",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_newPendingTransactionFilter": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_newPendingTransactionFilter",
        "description": "Creates a filter in the node, to notify when new pending transactions arrive.",
        "operationId": "eth_newPendingTransactionFilter",
        "responses": {
          "200": {
            "description": "Filter Identifier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_newPendingTransactionFilterResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_newPendingTransactionFilterRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_newPendingTransactionFilter"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_newPendingTransactionFilter",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_uninstallFilter": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_uninstallFilter",
        "description": "Uninstalls a filter with given id.",
        "operationId": "eth_uninstallFilter",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_uninstallFilterResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_uninstallFilterRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_uninstallFilter"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Filter Identifier",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_uninstallFilter",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getFilterChanges": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getFilterChanges",
        "description": "Polling method for a filter, which returns an array of logs which occurred since last poll.",
        "operationId": "eth_getFilterChanges",
        "responses": {
          "200": {
            "description": "Log objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getFilterChangesResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Filter results",
                      "oneOf": [
                        {
                          "title": "new block hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new transaction hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new logs",
                          "type": "array",
                          "items": {
                            "title": "log",
                            "type": "object",
                            "required": [
                              "transactionHash"
                            ],
                            "properties": {
                              "removed": {
                                "title": "removed",
                                "type": "boolean"
                              },
                              "logIndex": {
                                "title": "log index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionIndex": {
                                "title": "transaction index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionHash": {
                                "title": "transaction hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockHash": {
                                "title": "block hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockNumber": {
                                "title": "block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "address": {
                                "title": "address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "data": {
                                "title": "data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "topics": {
                                "title": "topics",
                                "type": "array",
                                "items": {
                                  "title": "32 hex encoded bytes",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getFilterChangesRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getFilterChanges"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Filter Identifier",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getFilterChanges",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getFilterLogs": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getFilterLogs",
        "description": "Returns an array of all logs matching filter with given id.",
        "operationId": "eth_getFilterLogs",
        "responses": {
          "200": {
            "description": "Log objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getFilterLogsResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Filter results",
                      "oneOf": [
                        {
                          "title": "new block hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new transaction hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new logs",
                          "type": "array",
                          "items": {
                            "title": "log",
                            "type": "object",
                            "required": [
                              "transactionHash"
                            ],
                            "properties": {
                              "removed": {
                                "title": "removed",
                                "type": "boolean"
                              },
                              "logIndex": {
                                "title": "log index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionIndex": {
                                "title": "transaction index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionHash": {
                                "title": "transaction hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockHash": {
                                "title": "block hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockNumber": {
                                "title": "block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "address": {
                                "title": "address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "data": {
                                "title": "data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "topics": {
                                "title": "topics",
                                "type": "array",
                                "items": {
                                  "title": "32 hex encoded bytes",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getFilterLogsRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getFilterLogs"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Filter Identifier",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getFilterLogs",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getLogs": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getLogs",
        "description": "Returns an array of all logs matching filter with given id.",
        "operationId": "eth_getLogs",
        "responses": {
          "200": {
            "description": "Log objects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getLogsResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Filter results",
                      "oneOf": [
                        {
                          "title": "new block hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new transaction hashes",
                          "type": "array",
                          "items": {
                            "title": "32 byte hex value",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          }
                        },
                        {
                          "title": "new logs",
                          "type": "array",
                          "items": {
                            "title": "log",
                            "type": "object",
                            "required": [
                              "transactionHash"
                            ],
                            "properties": {
                              "removed": {
                                "title": "removed",
                                "type": "boolean"
                              },
                              "logIndex": {
                                "title": "log index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionIndex": {
                                "title": "transaction index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionHash": {
                                "title": "transaction hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockHash": {
                                "title": "block hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockNumber": {
                                "title": "block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "address": {
                                "title": "address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "data": {
                                "title": "data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "topics": {
                                "title": "topics",
                                "type": "array",
                                "items": {
                                  "title": "32 hex encoded bytes",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getLogsRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getLogs"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Filter",
                        "type": "object",
                        "properties": {
                          "fromBlock": {
                            "title": "from block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "toBlock": {
                            "title": "to block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "address": {
                            "title": "Address(es)",
                            "oneOf": [
                              {
                                "title": "Address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              {
                                "title": "Addresses",
                                "type": "array",
                                "items": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                }
                              }
                            ]
                          },
                          "topics": {
                            "title": "Topics",
                            "type": "array",
                            "items": {
                              "title": "Filter Topic List Entry",
                              "oneOf": [
                                {
                                  "title": "Any Topic Match",
                                  "type": "null"
                                },
                                {
                                  "title": "Single Topic Match",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                },
                                {
                                  "title": "Multiple Topic Match",
                                  "type": "array",
                                  "items": {
                                    "title": "32 hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getLogs",
                "params": [
                  {
                    "topics": [
                      "TODO"
                    ]
                  }
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_mining": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_mining",
        "description": "Returns whether the client is actively mining new blocks.",
        "operationId": "eth_mining",
        "responses": {
          "200": {
            "description": "Mining status",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_miningResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "miningStatus",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_miningRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_mining"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_mining",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_hashrate": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_hashrate",
        "description": "Returns the number of hashes per second that the node is mining with.",
        "operationId": "eth_hashrate",
        "responses": {
          "200": {
            "description": "Mining status",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_hashrateResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Hashrate",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_hashrateRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_hashrate"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_hashrate",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getWork": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getWork",
        "description": "Returns the hash of the current block, the seedHash, and the boundary condition to be met (\u201ctarget\u201d).",
        "operationId": "eth_getWork",
        "responses": {
          "200": {
            "description": "Current work",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getWorkResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "array",
                      "items": [
                        {
                          "title": "Proof-of-work hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        {
                          "title": "seed hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        {
                          "title": "difficulty",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getWorkRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getWork"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [],
                    "minItems": 0,
                    "maxItems": 0
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getWork",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_submitWork": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_submitWork",
        "description": "Used for submitting a proof-of-work solution.",
        "operationId": "eth_submitWork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_submitWorkResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_submitWorkRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_submitWork"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "nonce",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{16}$"
                      },
                      {
                        "title": "hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "digest",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 3,
                    "maxItems": 3
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_submitWork",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_submitHashrate": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_submitHashrate",
        "description": "Used for submitting mining hashrate.",
        "operationId": "eth_submitHashrate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_submitHashrateResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_submitHashrateRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_submitHashrate"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Hashrate",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "ID",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_submitHashrate",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_sign": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_sign",
        "description": "Returns an EIP-191 signature over the provided data.",
        "operationId": "eth_sign",
        "responses": {
          "200": {
            "description": "Signature",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_signResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "65 hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{512}$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_signRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_sign"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "Message",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_sign",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_signTransaction": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_signTransaction",
        "description": "Returns an RLP encoded transaction signed by the specified account.",
        "operationId": "eth_signTransaction",
        "responses": {
          "200": {
            "description": "Encoded transaction",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_signTransactionResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_signTransactionRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_signTransaction"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Transaction",
                        "type": "object",
                        "required": [
                          "from"
                        ],
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "EIP-1559 transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "maxFeePerGas",
                              "maxPriorityFeePerGas",
                              "chainId",
                              "accessList"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                              },
                              "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                              },
                              "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                  "title": "Access list entry",
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "title": "hex encoded address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "storageKeys": {
                                      "type": "array",
                                      "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                      }
                                    }
                                  }
                                }
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "EIP-2930 transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "gasPrice",
                              "chainId",
                              "accessList"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                              },
                              "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                  "title": "Access list entry",
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "title": "hex encoded address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "storageKeys": {
                                      "type": "array",
                                      "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                      }
                                    }
                                  }
                                }
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Legacy transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "gasPrice"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          }
                        ],
                        "properties": {
                          "from": {
                            "title": "from",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          }
                        }
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_signTransaction",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getBalance": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getBalance",
        "description": "Returns the balance of the account of given address.",
        "operationId": "eth_getBalance",
        "responses": {
          "200": {
            "description": "Balance",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getBalanceResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getBalanceRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getBalance"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getBalance",
                "params": [
                  "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getStorageAt": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getStorageAt",
        "description": "Returns the value from a storage position at a given address.",
        "operationId": "eth_getStorageAt",
        "responses": {
          "200": {
            "description": "Value",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getStorageAtResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getStorageAtRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getStorageAt"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "Storage slot",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{0,64}$"
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getStorageAt",
                "params": [
                  "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                  "0x0",
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getTransactionCount": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getTransactionCount",
        "description": "Returns the number of transactions sent from an address.",
        "operationId": "eth_getTransactionCount",
        "responses": {
          "200": {
            "description": "Transaction count",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getTransactionCountResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded unsigned integer",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getTransactionCountRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getTransactionCount"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getTransactionCount",
                "params": [
                  "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getCode": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getCode",
        "description": "Returns code at a given address.",
        "operationId": "eth_getCode",
        "responses": {
          "200": {
            "description": "Bytecode",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getCodeResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getCodeRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getCode"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getCode",
                "params": [
                  "0x09236cff45047dbee6b921e00704bed6d6b8cf7e",
                  "latest"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getProof": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getProof",
        "description": "Returns the merkle proof for a given account and optionally some storage keys.",
        "operationId": "eth_getProof",
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getProofResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "Account proof",
                      "type": "object",
                      "required": [
                        "address",
                        "accountProof",
                        "balance",
                        "codeHash",
                        "nonce",
                        "storageHash",
                        "storageProof"
                      ],
                      "properties": {
                        "address": {
                          "title": "address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "accountProof": {
                          "title": "accountProof",
                          "type": "array",
                          "items": {
                            "title": "hex encoded bytes",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          }
                        },
                        "balance": {
                          "title": "balance",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{0,64}$"
                        },
                        "codeHash": {
                          "title": "codeHash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f][0-9a-f]{0,31})|0$"
                        },
                        "storageHash": {
                          "title": "storageHash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "storageProof": {
                          "title": "storageProof",
                          "type": "array",
                          "items": {
                            "title": "Storage proof",
                            "type": "object",
                            "required": [
                              "key",
                              "value",
                              "proof"
                            ],
                            "properties": {
                              "key": {
                                "title": "key",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{0,64}$"
                              },
                              "proof": {
                                "title": "proof",
                                "type": "array",
                                "items": {
                                  "title": "hex encoded bytes",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]*$"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getProofRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getProof"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      {
                        "title": "StorageKeys",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      }
                    ],
                    "minItems": 3,
                    "maxItems": 3
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getProof",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_sendTransaction": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_sendTransaction",
        "description": "Signs and submits a transaction.",
        "operationId": "eth_sendTransaction",
        "responses": {
          "200": {
            "description": "Transaction hash",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_sendTransactionResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "32 byte hex value",
                      "type": "string",
                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_sendTransactionRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_sendTransaction"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Transaction",
                        "type": "object",
                        "required": [
                          "from"
                        ],
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "EIP-1559 transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "maxFeePerGas",
                              "maxPriorityFeePerGas",
                              "chainId",
                              "accessList"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                              },
                              "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                              },
                              "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                  "title": "Access list entry",
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "title": "hex encoded address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "storageKeys": {
                                      "type": "array",
                                      "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                      }
                                    }
                                  }
                                }
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "EIP-2930 transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "gasPrice",
                              "chainId",
                              "accessList"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                              },
                              "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                  "title": "Access list entry",
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "title": "hex encoded address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "storageKeys": {
                                      "type": "array",
                                      "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                      }
                                    }
                                  }
                                }
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Legacy transaction.",
                            "required": [
                              "type",
                              "nonce",
                              "gas",
                              "value",
                              "input",
                              "gasPrice"
                            ],
                            "properties": {
                              "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                              },
                              "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "to": {
                                "title": "to address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                              },
                              "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                              }
                            }
                          }
                        ],
                        "properties": {
                          "from": {
                            "title": "from",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          }
                        }
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_sendTransaction",
                "params": [],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_sendRawTransaction": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_sendRawTransaction",
        "description": "Submits a raw transaction.",
        "operationId": "eth_sendRawTransaction",
        "responses": {
          "200": {
            "description": "Transaction hash",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_sendRawTransactionResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "title": "32 byte hex value",
                      "type": "string",
                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_sendRawTransactionRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_sendRawTransaction"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Transaction",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_sendRawTransaction",
                "params": [
                  "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getTransactionByHash": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getTransactionByHash",
        "description": "Returns the information about a transaction requested by transaction hash.",
        "operationId": "eth_getTransactionByHash",
        "responses": {
          "200": {
            "description": "Transaction information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getTransactionByHashResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "object",
                      "title": "Transaction information",
                      "required": [
                        "blockHash",
                        "blockNumber",
                        "from",
                        "hash",
                        "transactionIndex"
                      ],
                      "oneOf": [
                        {
                          "title": "Signed 1559 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "input",
                            "maxFeePerGas",
                            "maxPriorityFeePerGas",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "maxPriorityFeePerGas": {
                              "title": "max priority fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                              "title": "max fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed 2930 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed Legacy Transaction",
                          "type": "object",
                          "required": [
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "v",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "v": {
                              "title": "v",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        }
                      ],
                      "properties": {
                        "blockHash": {
                          "title": "block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "blockNumber": {
                          "title": "block number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "from": {
                          "title": "from address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "hash": {
                          "title": "transaction hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionIndex": {
                          "title": "transaction index",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getTransactionByHashRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getTransactionByHash"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getTransactionByHash",
                "params": [
                  "0x5050233e4de55d085dbbb7858eb5c5ed07cf8f8d07912a00a9344b06319dff90"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getTransactionByBlockHashAndIndex": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getTransactionByBlockHashAndIndex",
        "description": "Returns information about a transaction by block hash and transaction index position.",
        "operationId": "eth_getTransactionByBlockHashAndIndex",
        "responses": {
          "200": {
            "description": "Transaction information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getTransactionByBlockHashAndIndexResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "object",
                      "title": "Transaction information",
                      "required": [
                        "blockHash",
                        "blockNumber",
                        "from",
                        "hash",
                        "transactionIndex"
                      ],
                      "oneOf": [
                        {
                          "title": "Signed 1559 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "input",
                            "maxFeePerGas",
                            "maxPriorityFeePerGas",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "maxPriorityFeePerGas": {
                              "title": "max priority fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                              "title": "max fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed 2930 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed Legacy Transaction",
                          "type": "object",
                          "required": [
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "v",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "v": {
                              "title": "v",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        }
                      ],
                      "properties": {
                        "blockHash": {
                          "title": "block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "blockNumber": {
                          "title": "block number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "from": {
                          "title": "from address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "hash": {
                          "title": "transaction hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionIndex": {
                          "title": "transaction index",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getTransactionByBlockHashAndIndexRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getTransactionByBlockHashAndIndex"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "Transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getTransactionByBlockHashAndIndex",
                "params": [
                  "0xeb2307983a9c36625d1eb708ee7872918e0d51efb570995e654e181c56f76c13",
                  "0x0"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getTransactionByBlockNumberAndIndex": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getTransactionByBlockNumberAndIndex",
        "description": "Returns information about a transaction by block number and transaction index position.",
        "operationId": "eth_getTransactionByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "Transaction information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getTransactionByBlockNumberAndIndexResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "object",
                      "title": "Transaction information",
                      "required": [
                        "blockHash",
                        "blockNumber",
                        "from",
                        "hash",
                        "transactionIndex"
                      ],
                      "oneOf": [
                        {
                          "title": "Signed 1559 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "input",
                            "maxFeePerGas",
                            "maxPriorityFeePerGas",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "maxPriorityFeePerGas": {
                              "title": "max priority fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                              "title": "max fee per gas",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed 2930 Transaction",
                          "type": "object",
                          "required": [
                            "accessList",
                            "chainId",
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "value",
                            "yParity"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "description": "EIP-2930 access list",
                              "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "hex encoded address",
                                    "type": "string",
                                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                  },
                                  "storageKeys": {
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex value",
                                      "type": "string",
                                      "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                    }
                                  }
                                }
                              }
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "yParity": {
                              "title": "yParity",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        },
                        {
                          "title": "Signed Legacy Transaction",
                          "type": "object",
                          "required": [
                            "gas",
                            "gasPrice",
                            "input",
                            "nonce",
                            "r",
                            "s",
                            "type",
                            "v",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                              "title": "to address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "gas": {
                              "title": "gas limit",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                              "title": "input data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                              "title": "gas price",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "chainId": {
                              "title": "chainId",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                              "description": "Chain ID that this transaction is valid on."
                            },
                            "v": {
                              "title": "v",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "r": {
                              "title": "r",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "s": {
                              "title": "s",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                          }
                        }
                      ],
                      "properties": {
                        "blockHash": {
                          "title": "block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "blockNumber": {
                          "title": "block number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "from": {
                          "title": "from address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "hash": {
                          "title": "transaction hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionIndex": {
                          "title": "transaction index",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getTransactionByBlockNumberAndIndexRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getTransactionByBlockNumberAndIndex"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Block",
                        "oneOf": [
                          {
                            "title": "Block number",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          {
                            "title": "Block tag",
                            "type": "string",
                            "enum": [
                              "earliest",
                              "finalized",
                              "safe",
                              "latest",
                              "pending"
                            ],
                            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                          }
                        ]
                      },
                      {
                        "title": "Transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    ],
                    "minItems": 2,
                    "maxItems": 2
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getTransactionByBlockNumberAndIndex",
                "params": [
                  "latest",
                  "0x0"
                ],
                "id": 0
              }
            }
          }
        }
      }
    },
    "/eth_getTransactionReceipt": {
      "post": {
        "tags": [
          "eth"
        ],
        "summary": "eth_getTransactionReceipt",
        "description": "Returns the receipt of a transaction by transaction hash.",
        "operationId": "eth_getTransactionReceipt",
        "responses": {
          "200": {
            "description": "Receipt Information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "eth_getTransactionReceiptResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "RPC Request ID",
                      "type": "integer"
                    },
                    "jsonrpc": {
                      "title": "jsonrpc version",
                      "type": "string",
                      "enum": [
                        "2.0"
                      ]
                    },
                    "result": {
                      "type": "object",
                      "title": "Receipt info",
                      "required": [
                        "blockHash",
                        "blockNumber",
                        "from",
                        "cumulativeGasUsed",
                        "gasUsed",
                        "logs",
                        "logsBloom",
                        "transactionHash",
                        "transactionIndex",
                        "effectiveGasPrice"
                      ],
                      "properties": {
                        "transactionHash": {
                          "title": "transaction hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "transactionIndex": {
                          "title": "transaction index",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "blockHash": {
                          "title": "block hash",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        },
                        "blockNumber": {
                          "title": "block number",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "from": {
                          "title": "from",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "to": {
                          "title": "to",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$",
                          "description": "Address of the receiver or null in a contract creation transaction."
                        },
                        "cumulativeGasUsed": {
                          "title": "cumulative gas used",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The sum of gas used by this transaction and all preceding transactions in the same block."
                        },
                        "gasUsed": {
                          "title": "gas used",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The amount of gas used for this specific transaction alone."
                        },
                        "contractAddress": {
                          "title": "contract address",
                          "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                          "oneOf": [
                            {
                              "title": "hex encoded address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            {
                              "name": null,
                              "type": "null"
                            }
                          ]
                        },
                        "logs": {
                          "title": "logs",
                          "type": "array",
                          "items": {
                            "title": "log",
                            "type": "object",
                            "required": [
                              "transactionHash"
                            ],
                            "properties": {
                              "removed": {
                                "title": "removed",
                                "type": "boolean"
                              },
                              "logIndex": {
                                "title": "log index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionIndex": {
                                "title": "transaction index",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "transactionHash": {
                                "title": "transaction hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockHash": {
                                "title": "block hash",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              },
                              "blockNumber": {
                                "title": "block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                              },
                              "address": {
                                "title": "address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "data": {
                                "title": "data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              },
                              "topics": {
                                "title": "topics",
                                "type": "array",
                                "items": {
                                  "title": "32 hex encoded bytes",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "logsBloom": {
                          "title": "logs bloom",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]{512}$"
                        },
                        "root": {
                          "title": "state root",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$",
                          "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
                        },
                        "status": {
                          "title": "status",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
                        },
                        "effectiveGasPrice": {
                          "title": "effective gas price",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "eth_getTransactionReceiptRequest",
                "type": "object",
                "required": [
                  "jsonrpc",
                  "method",
                  "params",
                  "id"
                ],
                "properties": {
                  "jsonrpc": {
                    "title": "jsonrpc version",
                    "type": "string",
                    "enum": [
                      "2.0"
                    ]
                  },
                  "method": {
                    "title": "RPC Method Name",
                    "type": "string",
                    "enum": [
                      "eth_getTransactionReceipt"
                    ]
                  },
                  "params": {
                    "title": "Needed RPC Params",
                    "type": "array",
                    "prefixItems": [
                      {
                        "title": "Transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ],
                    "minItems": 0,
                    "maxItems": 1
                  },
                  "id": {
                    "title": "RPC Request ID",
                    "type": "integer"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getTransactionReceipt",
                "params": [
                  "0x5050233e4de55d085dbbb7858eb5c5ed07cf8f8d07912a00a9344b06319dff90"
                ],
                "id": 0
              }
            }
          }
        }
      }
    }
  }
}